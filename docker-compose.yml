---
networks:
  pulsometer_network:
    driver: bridge
services:
  backend:
    container_name: pulsometer_backend
    image: hlofiys/pulsometer-backend:master
    networks:
      - pulsometer_network
    depends_on:
      - pulsometer_db
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`pulse.hlofiys.xyz`) && (PathPrefix(`/api`) || PathPrefix(`/swagger`) || PathPrefix(`/sse`) || PathPrefix(`webjars`))"
      - "traefik.http.routers.api.entrypoints=web"
  frontend:
    container_name: pulsometer_frontend
    image: hlofiys/pulsometer-frontend:master
    networks:
      - pulsometer_network
    depends_on:
      - backend
    healthcheck:
      test: curl --fail http://localhost/ || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`pulse.hlofiys.xyz`)"
      - "traefik.http.routers.api.entrypoints=web"
  pulsometer_db:
    container_name: pulsometer_db
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    networks:
      - pulsometer_network
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
  reverse-proxy:
    # The official v3 Traefik docker image
    image: traefik:v3.1
    # Enables the web UI and tells Traefik to listen to docker
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      # The HTTP port
      - "8080:80"
      # The Web UI (enabled by --api.insecure=true)
      - "6000:8080"
    networks:
      - pulsometer_network
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 --label-enable
volumes:
  postgres-data:
